plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.12.0'
}

def allureVersion = "2.21.0"

group = 'ru.vens'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.0'
    testImplementation 'com.codeborne:selenide:6.19.1'
    testImplementation "io.qameta.allure:allure-selenide:$allureVersion"
    testImplementation 'org.aeonbits.owner:owner:1.0.12'
    testImplementation 'org.slf4j:slf4j-simple:2.0.7'
    testImplementation 'com.github.javafaker:javafaker:1.0.2'
    
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
    
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
}

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())
    systemProperty "file.encoding", "UTF-8"
    
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}